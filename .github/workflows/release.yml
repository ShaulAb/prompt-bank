name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Release to Marketplace
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all checks
        run: |
          npx tsc --noEmit
          npm run lint
          npm test
          npm run build

      - name: Bump version
        id: version
        run: |
          echo "OLD_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate changelog
        run: npx conventional-changelog-cli -p angular -i CHANGELOG.md -s -r 0

      - name: Package extension
        run: npm run package

      - name: Commit version bump and changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): ðŸ”– v${{ steps.version.outputs.NEW_VERSION }}"
          git tag v${{ steps.version.outputs.NEW_VERSION }}

      - name: Push changes
        run: |
          git push origin HEAD:main
          git push origin v${{ steps.version.outputs.NEW_VERSION }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.NEW_VERSION }}
          release_name: Release v${{ steps.version.outputs.NEW_VERSION }}
          body: |
            ## ðŸ“¦ Manual Testing Required

            This release has been packaged and is ready for testing. The VSIX file is attached to this release.

            ### ðŸ§ª Testing Steps:
            1. Download the VSIX file from this release
            2. Install locally: `code --install-extension prompt-bank-${{ steps.version.outputs.NEW_VERSION }}.vsix`
            3. Test the extension functionality
            4. If everything works: publish manually with `vsce publish`

            ### ðŸ“‹ Changes:
            See CHANGELOG.md for detailed changes in this release.

            ---
            *This release was created automatically but requires manual publishing to marketplace.*
          draft: false
          prerelease: false

      - name: Upload VSIX to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./prompt-bank-${{ steps.version.outputs.NEW_VERSION }}.vsix
          asset_name: prompt-bank-${{ steps.version.outputs.NEW_VERSION }}.vsix
          asset_content_type: application/zip