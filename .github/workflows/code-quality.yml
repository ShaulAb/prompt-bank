name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: TypeScript type checking
        run: npx tsc --noEmit
        
      - name: Check code formatting
        run: npx prettier --check src
        
      - name: Run linter with detailed output
        run: npm run lint -- --format=json --output-file=eslint-report.json
        continue-on-error: true
        
      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: eslint-report.json
          retention-days: 7
          
      - name: Check for TODO/FIXME comments
        run: |
          echo "🔍 Checking for TODO/FIXME comments..."
          if grep -r --include="*.ts" --include="*.js" -n "TODO\|FIXME" src/; then
            echo "⚠️ Found TODO/FIXME comments. Consider addressing them before release."
          else
            echo "✅ No TODO/FIXME comments found"
          fi
          
      - name: Check bundle size
        run: |
          npm run build
          BUNDLE_SIZE=$(stat -c%s "dist/extension.js")
          echo "📦 Bundle size: $BUNDLE_SIZE bytes"
          
          # Alert if bundle is larger than 1MB
          if [ $BUNDLE_SIZE -gt 1048576 ]; then
            echo "⚠️ Bundle size is large (>1MB). Consider optimizing."
          else
            echo "✅ Bundle size is acceptable"
          fi
          
      - name: Test coverage
        run: |
          echo "📊 Running test coverage analysis..."
          npx vitest run --coverage --config vitest.config.ts || true
          
      - name: Check for unused dependencies
        run: |
          echo "🔍 Checking for unused dependencies..."
          npx depcheck --json > depcheck-report.json || true
          
          if [ -s depcheck-report.json ]; then
            echo "📋 Dependency check report generated"
            cat depcheck-report.json
          fi
          
      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        with:
          name: depcheck-report
          path: depcheck-report.json
          retention-days: 7

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build extension
        run: npm run build
        
      - name: Measure build time
        run: |
          echo "⏱️ Measuring build performance..."
          time npm run build
          
      - name: Test startup performance
        run: |
          echo "🚀 Testing extension startup performance..."
          # This would require VS Code extension testing framework
          # For now, we'll just measure test execution time
          time npm test